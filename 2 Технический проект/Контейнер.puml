@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml
!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons
!include DEVICONS/postgresql.puml
!include DEVICONS/react.puml

LAYOUT_WITH_LEGEND()

title Контекстная диаграмма C4 для платформы трейдинга

Person(client_trader, "Трейдер", "")
Person(client_broker, "Брокер", "")
Person(client_admin, "Администратор", "сис. админ")
Person(client_analyst, "Аналитик", "Штатный аналитик продукта")

System(trading_frontend_system, "Frontend", "React & Redux\n Предоставляет UI для работы с приложением", $sprite="react")

System_Boundary(trading_backend_system, "Backend") {
  Container(api_gateway_container, "API Gateway", "C#, ASP.NET", "Распределяет запросы по нужным микросервисам")

  Container(payment_integration_microservice_container, "Payment Integration Microservice", "C#, ASP.NET", "Взаимодействие с платёжными системами")
  Container(transactions_microservice_container, "Transactions Microservice", "C#, ASP.NET", "Бизнес-логика транзакций")
  Container(analytics_microservice_container, "Analytics Microservice", "C#, ASP.NET", "Аналитические отчёты")
  Container(forum_microservice_container, "Forum Microservice", "C#, ASP.NET", "Сообщения, топики, статьи")
  Container(user_microservice_container, "User Microservice", "C#, ASP.NET", "Личный профиль пользователя")

  ContainerDb(payment_integration_container_db, "Payment Integration DB", "PostgreSQL", "", $sprite="postgresql", "Проводящиеся и проведённые запросы к платёжными системам")
  ContainerDb(transactions_container_db, "Transactions DB", "PostgreSQL", "", $sprite="postgresql", "Проводящиеся и проведённые транзакции")
  ContainerDb(analytics_container_db, "Analytics DB", "ClickHouse", "Все аналитические данные")
  ContainerDb(forum_container_db, "Forum DB", "PostgreSQL", "", $sprite="postgresql", "Сообщения, топики, статьи")
  ContainerDb(user_container_db, "User DB", "PostgreSQL", "", $sprite="postgresql", "Личная информация о пользователях")

  ContainerQueue(analytics_container_mq, "Analytics MQ", "RabbitMQ")
  ContainerQueue(payment_integration_container_mq, "Payment Integration MQ", "RabbitMQ")
  ContainerQueue(transactions_container_mq, "Transactions MQ", "RabbitMQ")
  ContainerQueue(user_container_mq, "User MQ", "RabbitMQ")
}

System_Ext(mail_system, "E-mail система", "Отправка email-писем")
System_Ext(payment_system, "Платёжная система")
System_Ext(proxy_system, "Обратный прокси-сервер", "Защита от DDOS-атак")
System_Ext(sms_system, "SMS-платформа", "Отправка SMS-писем")

client_trader --> proxy_system : "Использовать"
client_broker --> proxy_system : "Использовать"
client_admin --> proxy_system : "Использовать"
client_analyst --> proxy_system : "Использовать"

proxy_system --> trading_frontend_system : "HTTP-запрос"

trading_frontend_system --> api_gateway_container : "HTTP-запрос"

api_gateway_container --> transactions_microservice_container : "HTTP-запрос"
api_gateway_container --> analytics_microservice_container : "HTTP-запрос"
api_gateway_container --> forum_microservice_container : "HTTP-запрос"
api_gateway_container --> user_microservice_container : "HTTP-запрос"

payment_integration_microservice_container --> payment_integration_container_db : "Передать запрос"
transactions_microservice_container --> transactions_container_db : "Передать запрос"
transactions_microservice_container --> payment_integration_microservice_container : "Передать запрос"
analytics_microservice_container --> analytics_container_db : "Передать запрос"
forum_microservice_container --> forum_container_db : "Передать запрос"
user_microservice_container --> user_container_db : "Передать запрос"
transactions_microservice_container --> payment_integration_microservice_container : "Передать запрос"
user_microservice_container --> transactions_microservice_container : "Передать запрос"

transactions_microservice_container --> analytics_container_mq : "Отправить событие"
analytics_microservice_container --> analytics_container_mq : "Отправить событие"
forum_microservice_container --> analytics_container_mq : "Отправить событие"
user_microservice_container --> payment_integration_container_mq : "Отправить событие"
payment_integration_microservice_container --> user_container_mq : "Отправить событие"
transactions_microservice_container --> payment_integration_container_mq : "Отправить событие"
transactions_microservice_container --> transactions_container_mq : "Отправить событие"
payment_integration_microservice_container --> transactions_container_mq : "Отправить событие"

payment_integration_microservice_container --> payment_system : "Отправить запрос"
user_microservice_container --> mail_system : "Отправить Email"
user_microservice_container --> sms_system : "Отправить SMS"
@enduml